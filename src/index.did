type Goggle = record {
  id : text;
  glassType : text;
  storeId : text;
  createdAt : nat64;
  size : text;
  updatedAt : opt nat64;
  gender : text;
  power : text;
  price : float64;
};
type GogglePayload = record {
  glassType : text;
  storeId : text;
  size : text;
  gender : text;
  power : text;
  price : float64;
};
type GoggleStore = record {
  id : text;
  owner : principal;
  name : text;
  createdAt : nat64;
  updatedAt : opt nat64;
  goggles : vec Goggle;
  image : text;
  location : text;
};
type GoggleStorePayload = record { name : text; image : text; location : text };
type _AzleResult = variant { Ok : Goggle; Err : text };
type _AzleResult_1 = variant { Ok : GoggleStore; Err : text };
type _AzleResult_2 = variant { Ok : vec Goggle; Err : text };
service : () -> {
  createGoggle : (GogglePayload) -> (_AzleResult);
  createGoggleStore : (GoggleStorePayload) -> (_AzleResult_1);
  deleteGoggle : (text) -> (_AzleResult);
  deleteGoggleStore : (text) -> (_AzleResult_1);
  getAllGoggles : () -> (_AzleResult_2) query;
  getGoggle : (text) -> (_AzleResult) query;
  getGoggleStore : (text) -> (_AzleResult_1) query;
  updateGoggle : (text, GogglePayload) -> (_AzleResult);
  updateGoggleStore : (text, GoggleStorePayload) -> (_AzleResult_1);
}